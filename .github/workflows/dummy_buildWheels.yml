# buildWheels.yml output matching replacement.
#
# Instead of actually building, it grabs a wheel from the repo at the specified
# location and saves it in the same way as buildWheels would. This allows for
# trialing the rest of the workflow without having to recompile a wheel.
#
# Currently, no such folder exists in the repo; during manual testing such
# a folder would need to be added and filled.
#
# Effects: artifact containing the wheels is saved

name: BuildWheels(Dummy)

on:
  workflow_call:
    inputs:
      # The name of the artifact containing the wheels
      saveNameWheel:
        required: true
        type: string
      # The name of the artifact containing the conda channel
      saveNameConda:
        required: true
        type: string

jobs:
  build_wheels:
    name: Build wheels on ${{ matrix.os}}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: ["ubuntu-latest", "windows-latest", "macos-latest"]

    steps:
      - uses: actions/checkout@v3

      - uses: conda-incubator/setup-miniconda@v2
        with:
          auto-activate-base: true
          activate-environment: ""

      - name: Remove Source
        shell: bash
        run: |
          cd wheelhouse
          pip install wheel
          for name in *.whl; do
              python3 ../remove_source.py . $name
          done

      - name: Conda channel build
        run: |
          conda install conda-build
          conda build conda_recipe/ --output-folder=conda_output --no-test --no-anaconda-upload --no-activate

      # retention days param critical for cost saving wrt free/paid storage.
      - uses: actions/upload-artifact@v3
        with:
          name: ${{inputs.saveNameWheel}}
          path: ./wheelhouse/
          retention-days: 1

      - uses: actions/upload-artifact@v3
        with:
          name: ${{inputs.saveNameConda}}
          path: ./conda_output/
          retention-days: 1
