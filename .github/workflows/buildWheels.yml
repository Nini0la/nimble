# Build wheels and save as artifact, to either be manually downloaded,
# or chained as a precursor job within another action.
#
# Effects: artifact containing all built wheels saved.

name: BuildWheels

# For inclusion in the publishing pipeline, we need the _call,
# we also allow direct access to this action for piecewise
# debugging.
on:
  workflow_call:
    inputs:
      # The name of the artifact containing the wheels
      saveNameWheel:
        required: true
        type: string
      # The name of the artifact containing the conda channel
      saveNameConda:
        required: true
        type: string

jobs:
  build_wheels:
    name: ${{ matrix.pyVer}} for ${{ matrix.os}}
    # This will automatically split off concurrent jobs running-on each value
    runs-on: ${{ matrix.os}}
    strategy:
      matrix:
        os: ["windows-latest"]
        #os: ["ubuntu-latest"]
        pyVer: ["cp3*"]
        #pyVer: ["cp3*", "cp39", "cp310", "cp311"]
        #pyVer: ["cp310"]

    steps:
      - uses: actions/checkout@v3

      # This is supposed to cache the downloads to pip for reuse later in this
      # pipeline; unclear to what extent what is here accomplishes that.
      - uses: actions/setup-python@v4
        with:
          python-version: |
            3.9
          cache: 'pip'
          cache-dependency-path: pyproject.toml

      - name: Build wheels
        uses: pypa/cibuildwheel@v2.14.1
        # Allows us to specify cibuildwheel specific environment variables.
        env:
          # Using the input to specifify the matrix, we will either build all
          # python versions for this OS sequentially (default), or build
          # the specified versions in parallel. Can also be used to limit o
          # only a specific version
          CIBW_BUILD: ${{ matrix.pyVer}}-*
          #CIBW_PROJECT_REQUIRES_PYTHON: ">=3.9, <3.11"
        with:
          output-dir: wheelhouse

      - uses: conda-incubator/setup-miniconda@v2
        with:
          auto-activate-base: true
          activate-environment: ""

      - name: Remove Source
        # bash shell can also be specified even when on windows
        shell: bash
        run: |
          cd wheelhouse
          pip install wheel
          for name in *.whl; do
              python3 ../remove_source.py . $name
          done

      - name: Conda channel build
        run: |
          conda install conda-build
          conda build conda_recipe/ --output-folder=nimble-data --no-test --no-anaconda-upload --no-activate

      # retention days param critical for cost saving wrt free/paid storage.
      - uses: actions/upload-artifact@v3
        with:
          name: ${{inputs.saveNameWheel}}
          path: ./wheelhouse/
          retention-days: 1

      - uses: actions/upload-artifact@v3
        with:
          name: ${{inputs.saveNameConda}}
          path: ./nimble-data/
          retention-days: 1
